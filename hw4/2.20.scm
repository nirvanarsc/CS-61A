(define (same-parity . items)
  (define (my-filter pred lst)
    (cond ((null? lst) nil)
          ((pred (car lst))
           (cons (car lst) (my-filter pred (cdr lst))))
          (else (my-filter pred (cdr lst)))))
  (define (my-pred x)
    (if (= 0 (modulo x 2))
      (lambda (z) (= 0 (modulo z 2)))
      (lambda (y) (= 1 (modulo y 2)))))
  (my-filter (my-pred (car items)) items))
